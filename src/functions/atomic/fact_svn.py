"""–ú–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API."""

from typing import List
import json
import requests
from requests.exceptions import RequestException
from telebot.types import Message
from bot_func_abc import AtomicBotFunctionABC


class FactSvNFunction(AtomicBotFunctionABC):
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /factsvn, –≤—ã–≤–æ–¥—è—â–µ–π —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã."""

    commands = ["factsvn"]
    authors = ["Kylon2308"]
    about = "–í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞"
    description = "–ö–æ–º–∞–Ω–¥–∞ /factsvn –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–π–Ω—ã—Ö " \
    "—Ñ–∞–∫—Ç–æ–≤ —Å –≤–Ω–µ—à–Ω–µ–≥–æ API –∫–æ–º–∞–Ω–¥–∞ —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–æ–≤"
    state = True

    def set_handlers(self, bot):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞."""

        @bot.message_handler(commands=self.commands)
        def handle_factsvn(message: Message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /factsvn."""
            try:
                arr = message.text.strip().split()
                count = 1  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–¥–∏–Ω —Ñ–∞–∫—Ç
                if len(arr) == 2 and arr[1].isdigit():
                    count = int(arr[1])
                    count = min(count, 10)  # –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ 10 —Ñ–∞–∫—Ç–æ–≤

                facts: List[str] = []
                for i in range(count):
                    response = requests.get(
                        "https://uselessfacts.jsph.pl/api/v2/facts/random?language=en", timeout=5
                    )
                    response.raise_for_status()
                    fact = response.json().get("text", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç.")
                    facts.append(f"{i + 1}. {fact}")

                message_text = "üí° Did you know?\n\n" + "\n\n".join(facts)
                bot.send_message(message.chat.id, message_text)

            except (RequestException, json.JSONDecodeError) as e:
                bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
